{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","react_default","a","createElement","className","role","type","msg","Navbar","concat","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","home","aboutSite","onClick","toggleMode","htmlFor","placeholder","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","formHeading","style","backgroundColor","color","value","onChange","event","console","log","target","rows","newValue","toUpperCase","showAlert","toLowerCase","copytext","document","getElementById","select","navigator","clipboard","writeText","space","split","join","length","toFixed","defaultProps","App","setMode","_useState3","_useState4","alert","setAlert","message","setTimeout","Fragment","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.14a1ab75.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    props.Alert && <div>\r\n      <div className=\"alert alert-success d-flex align-items-center\" role=\"alert\">\r\n  <div>\r\n   <strong>{props.Alert.type}</strong>: {props.Alert.msg}\r\n  </div>\r\n</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { a } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n<nav className={`navbar navbar-expand-lg  navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.home}</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"#\">{props.aboutSite}</a>\r\n        </li>\r\n      </ul>\r\n      <div className={`form-check form-switch text-${(props.mode === 'light'?'dark':'light')}`}>\r\n      <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n      <label className=\"form-check-label mx-3\"   htmlFor=\"flexSwitchCheckDefault\">{props.mode === 'dark' ?'Light Mode':'Dark Mode'}</label>\r\n    </div>\r\n      <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-info\" type=\"submit\">Search</button>\r\n        \r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\nNavbar.propTypes={\r\n    title: PropTypes.string.isRequired,\r\n    home: PropTypes.string.isRequired,\r\n    aboutSite: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n    title: \"defult_title\",\r\n    home: \"defult_home\",\r\n    aboutSite: \"defult_about\"\r\n}\r\n\r\n","import React,{useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const [text,setText] = useState(\"\")\r\n    const handleOnChange= (event)=>{\r\n        console.log(\"handled_change\")\r\n        setText(event.target.value)\r\n    }\r\n    const handleOnClick = ()=>{\r\n        let newValue = text.toUpperCase();\r\n        setText(newValue)\r\n        props.showAlert(\"Text Convert to Uppercase\",'Success')\r\n    }\r\n    const clear = ()=>{\r\n        let newValue = \"\"\r\n        setText(newValue) \r\n        props.showAlert(\"Text Clear\",'Success')   \r\n    }\r\n    const autoRemoveSpace = ()=>{\r\n        let space = text.split(/ +/)\r\n        setText(space.join(\" \"))\r\n        props.showAlert(\"Remove All White Space\",'Success')\r\n    }\r\n    const handleLoClick = ()=>{\r\n        let newValue = text.toLowerCase();\r\n        setText(newValue)\r\n        props.showAlert(\"Text Convert to Lowercase\",'Success')\r\n\r\n    }\r\n    const copyToClipBord = () =>{\r\n        let copytext = document.getElementById('textarea')\r\n        copytext.select()\r\n        navigator.clipboard.writeText(copytext.value)\r\n        props.showAlert(text,\"Succesfully copied To Clipbord \")\r\n    }\r\n    \r\n  return (\r\n    <div className='container my-5 mb-3 mx-auto ' >\r\n    <h1 className={`mb-3 text-center text-${props.mode==='light'?'dark':'light'}`}>{props.formHeading}</h1>\r\n    <textarea className=\"form-control\" style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}} type=\"text\" value={text} onChange={handleOnChange} id=\"textarea\" aria-label=\"readonly input example\" rows='8'></textarea>\r\n    <button className=\"btn btn-outline-primary my-3 mx-2\" onClick={handleOnClick}>Convert to Uppercase</button>\r\n    <button className=\"btn btn-outline-primary my-3 mx-2\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n    <button className=\"btn btn-outline-primary my-3 mx-2\" onClick={copyToClipBord}>Copy To Clipbord</button>\r\n    <button className=\"btn btn-outline-primary my-3 mx-2\" onClick={autoRemoveSpace}>Remove White Space</button>\r\n    <button className=\"btn btn-outline-danger my-3 mx-2\" onClick={clear}>Clear Text</button>\r\n\r\n    <h2 className={`my-3 text-${props.mode==='light'?'dark':'light'}`}>Your Text Summury</h2>\r\n    <p className='text-danger'> {text.split(\" \").length} Word & {text.length} Characters & { ((.04*text.length)/60).toFixed(2) } Miniutes</p>\r\n    <h2 className={`my-3 text-${props.mode==='light'?'dark':'light'}`}>Word Preview</h2>\r\n    <p className={`text-${props.mode==='light'?'primary':'info'}`}>{text.length>0?text:\"Enter the text above then Preview\"}</p>\r\n    </div>\r\n  )\r\n  }\r\n","import React,{useState} from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\n// let hacker = \"<h1>dedsecboy</h1>\"\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode,setMode] = useState('light')\n  const [alert,setAlert] = useState(null)\n  const showAlert = (message,type) =>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null)\n    },1500)\n  }\n  const toggleMode =()=>{\n    if(mode === 'light'){\n      setMode('dark')\n      document.body.style.backgroundColor = 'black'\n      showAlert(\"Dark mode Enable\",'Success');\n      document.title = \"Text-Util (Dark)\"\n      \n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode Enable\",'Success');\n      document.title = \"Text-Util (Light)\"\n\n    }\n  }\n    // setInterval(()=>{\n    //   document.title = \"Text Util is Amezing dev by Roy\"\n    // },2000)\n    // setInterval(()=>{\n    //   document.title = \"Text Util is Amezing dev by Dedsec\" \n    // },1500)\n  \n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title='TextUtil' home='HOME' aboutSite='About' mode={mode} toggleMode={toggleMode} />\n    <Alert Alert={alert} />\n    <TextForm showAlert={showAlert} formHeading='TextUtil Online Converter'  mode={mode}/>\n{/* \n    <Routes>\n          <Route exact path=\"/about\" element={<About />}/>\n          <Route exact path=\"/\" element={<TextForm showAlert={showAlert} formHeading='TextUtil Online Converter'  mode={mode}/>} />\n            \n    </Routes>\n    </Router>    */}\n    </>\n  );\n  }\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}